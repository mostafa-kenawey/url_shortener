name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Elixir and OTP versions
  ELIXIR_VERSION: '1.18.4'
  OTP_VERSION: '27.3.4.2'
  # Database configuration for testing
  MIX_ENV: test
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/url_shortener_test

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-20.04
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: url_shortener_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Check code formatting
        run: mix format --check-formatted

      - name: Run Credo (static analysis)
        run: mix credo --only=warning,error

      - name: Compile code (warnings as errors)
        run: mix compile --warnings-as-errors

      - name: Create and migrate test database
        run: |
          mix ecto.create
          mix ecto.migrate

      - name: Run tests with coverage
        run: mix test --cover --export-coverage default

      - name: Generate coverage report
        run: mix test.coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./cover/excoveralls.json
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scan
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Run security audit
        run: mix deps.audit

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-20.04
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to production
        run: flyctl deploy --app url-shortener-shy-fire-2164 --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Run post-deployment health check
        run: |
          # Wait for deployment to complete
          sleep 30
          
          # Health check
          response=$(curl -s -o /dev/null -w "%{http_code}" https://url-shortener-shy-fire-2164.fly.dev/)
          if [ $response -eq 200 ]; then
            echo "Production deployment successful - Health check passed"
          else
            echo "Production deployment failed - Health check returned $response"
            exit 1
          fi

      - name: Notify deployment success
        if: success()
        run: |
          echo "Production deployment completed successfully!"
          echo "Application is live at: https://url-shortener-shy-fire-2164.fly.dev/"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "Production deployment failed!"
          echo "Please check the logs and fix any issues."
